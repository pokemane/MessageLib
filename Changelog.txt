0.1.1 Alpha -- 19 September 2013
	-Compatibility for class/object references, provides workaround for "pass by value vs function" discrepancy LabVIEW has with other OOP languages
	
	-ADDED:
		-LabVIEW Object terminal in Message.Execute() method.  Must be downcast in child overrides.
		-Ability for Enqueue/Dequeue/Release Queue to take specific message objects of type TAS_Message
			-Not sure if explicitly needed, kind of got lost in my "figure things out" flurry.  It doesn't hurt at all.
		
	-NOTES:
		-Comments coming in later commit
		-References look messy but they're great.


0.1.0 Alpha -- 12 September 2013
	-Initial project creation
	
	-ADDED:
		-Enqueue
		-Dequeue
		-Execute --MUST be overridden in child classes.  If there is nothing to execute, just make an empty method or use the Invoke Parent Node method.
		-Obtain/Release Queue
		-All sorts of "standard" Accessor methods.  Feel free to add to these within child classes.  These just provide some basic functionality as an example.
	
	-NOTES:
		-Queue manipulation is done with Dynamic Dispatch, so you can make children of the Message class use the parent's methods (e.g. Enqueue and Execute)
		-This project has NO dependencies outside the standard VI library
		-See "LV OOP Example" project for examples of this type of messaging system.